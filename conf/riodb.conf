###########################################################
#
#	         R I O D B . C O N F
#
#  This file contains initialization parameters for RioDB.
#  All parameters are optional. In fact, the file is optional.
#
#  Most parameters are commented out. Uncomment to change.
#
#  By default, RioDB looks for configuration file in: 
#     conf/riodb.conf
#
#  A different path/filename can be specified by starting riodb
#  with the -f argument:
#  java -jar riodb.jar -f  /home/path/to/filename.conf
#
###########################################################


##################    LOGGING    ##########################
#
#
#  RioDB uses Apache log4j2 for logging runtime messages. 
#  log4j2 uses a properties file for formatting the log events. 
#  Here you can specify the location and file name for the 
#  log4j2 properties file. 
#
#  More info at:
#      https://logging.apache.org/log4j/2.x/
#

# # location of log4j2.xml: 
# log4j_properties conf/log4j2.xml


###################    PLUGINS   ##########################
#
#  RioDB loads input and output plugins (.jar files) 
#  from a predetermined directory.
#
#

# # Location of input/output plugins (jar files)
# plugin_dir 	conf/plugins/


###################   OUTPUT WORKERS   ###################
#
#  Number of worker threads allocated for executing 
#  output actions. Default value is 1
#
#  For heavy loads, 1 worker is slower, 
#  but ensures execution order.
#  Having more workers is faster, but output fulfillment 
#  might not happen in the order of query execution.
#

# # Number of workers
# output_workers	1


###################    SQL Init   #########################
#
#  SQL files can optionally be loaded during initialization to 
#  create streams, windows, queries, etc. 
#  The sql_dir parameter defines the directory where RioDB
#  should look for SQL files to be executed during startup. 
#  All .sql files in the directory will be processed. 
#  Other file extensions are ignored. 
#  

# # sql file directory:
# sql_dir 	conf/sql/


###################    HTTP API   #########################
#
#   If accepting API calls, like queries via HTTP,
#   then the parameter below to configure HTTP listener.
#
#   Note: This provides no encryption. 
#   And is not suitable for production deployment. 

# # HTTP listener port:
http_port 	2333

# # HTTP allowed only from this source (comment out to allow ALL)
# host		127.0.0.1

# # HTTP and HTTPS request timeout.
stmt_timeout 	10


###################    HTTPS API  #########################
#
#   If accepting API calls, like queries via secure HTTPS,
#   then use the parameters below to configure HTTPS listener.
#
#   see README.txt for instructions on creating the keystore.jks
#
#   All 3 "https" parameters are required for HTTPS.
#
#   NOTE: HTTPS connections are not auto-closed. If using CURL, you have to
#   explicitly add header to close:
#       curl -k -H 'Connection: close' https://localhost:2334
#
#   credentials_file is optional. If not provided, RioDB API
#   will not enforce user authentication or authorization.
#

# # HTTPS port
# https_port      		2334

# # location of .ssh keystore file
# https_keystore_file  	.ssl/keystore.jks

# # password for https keystore
# https_keystore_pwd  	pass_for_self_signed_cert

# # location of credentials file. 
# credentials_file  		.access/users.dat

